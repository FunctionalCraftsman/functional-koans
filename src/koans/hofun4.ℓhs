Maps and filters may be combined.

> module Main where
> main ⇐ do

  "Maps and filters may be combined"
  (= [10 20 30] (map (fn [x] __) (filter (fn [x] __) [1 2 3 4 5 6 7 8])))

ceiling floor truncate round :: (RealFrac a, Integral b) ⇒ a → b

> 	putStrLn (show ([1,3,5,7] =? filter odd (map (λx → truncate (x/10)) [10,20,30,40,50,60,70,80])))

nb map filter preserve value list comprehension
Return original list’s elements, for those elements whose transformed
values match criteria.  Here, return elements of the list with odd
numbers in the tens place, incremented by 1

> 	putStrLn (show ([11,31,51,71] =? (λxs → [x + 1 | x←xs, odd (truncate (x/10))]) [10,20,30,40,50,60,70,80]))
